정적은 누구나 똑같은 형태
동적은 작동 방식에 따라 바뀌는 형태

웹이라고 하는건 엄청나게 복잡한 형태이다.

요즘에 나오는 모든 형태는 웹으로 구현되기 때문에 웹을 모르면 아무것도 할 수 없다.

웹서버, 웹 어플리케이션 서버 (was)

URL(Uniform Resorce Locator) : http 부터 html까지 범위

URN(Uniform Resorce Name) : 프로토콜을 제외한 전체 나머지

URI(Universal Resource Identifier) : 밑에 주소 전체를 URI라고한다. 웹 컨텐츠, 웹문서, 웹피이지 다 같은 의미. 웹 문서를 식별하기 위한 하나의 주소 통합 리소스 자원 식별자라는 의미로도 해석할 수 있다.

http://user:user@www.abc.com.:80/abc.html?q=korea&t=abc
|<---------------------URI--------------------------->|
|<-----------------URL------------------>|
	|<---------------------URN------------------->|
					 |<-파라미터->|
위와 같은 형태는 주소에 id, pw가 노출되기 때문에 위험한 형태이고 현재는 안쓰이는 형태이다.
파라미터는 웹 어플리케이션에 전송하는 형태이다.

file://etc/passwd

ftp://ftp.abc.com
웹에서만 사용하는 형태가 아니다.
파일을 나타내는 형태, 식별하기 위한 리소스 라고 할 수있다.



281 ~ 283 p



client request / server response
method에 따라서 값이 있는지 없는지 볼 수 있다. (정해져있는 형태)
get 으로 요청 했을 때 header는 무조건 있지만 body는 있을수도 있고 없을수도 있다 (option)
응답은 반드시 있다.

body가 있던 없던 헤더가 끝나는 부분은 명확히 표시를 해야하는데 공백으로 표시를 한다.
응답도 마찬가지로 헤더 부분은 끝나는 부분이 공백으로 표시가 된다.
요청한 컨텐츠가 서버에 없으면 기본 페이지를 보여준다. 모든 웹서버에는 기본 페이지가 존재한다.

요청

GET <- Method, resource version (무조건 첫 번째)
단순 컨텐츠 요청, 웹 페이지 요청

GET /hello.html HTTP/1.1

/ : DocumentRoot
/ : 요청하는 버전

Host: 192.168.122.10
: Host가 들어가고 요청하는 주소가 들어간다.
  포트는 생략이 된 형태

GET, Host는 무조건 있어야한다.

User-Agent: curl/7.58.0
: 요청하는 브라우저, 어플리케이션 (현재는  curl로 요청했다)

Accept: */*
: 내가 사용하는 어플리케이션이 웹 서버가 응답을 했을 때 어떤 형태로 줄건지는
내가 받아드릴 수 있는 형태를 표시한다. (현재는 상태 모든 형태를 받아드릴 수 있는 형태이다)
스마트폰에서는 naver.com으로 접속을 못하고 m.naver.com 으로 리다이렉션을 한다.
사용자 환경에 따라서 레이아웃을 바꾼다.

응답

HTTP/1.1 200 OK 
: 응답 버전, 응답 code

Date: Tue, 23 Jul 2019 02:32:57 GMT
: 응답한 시간

Server: Apache/2.4.6 (CentOS)
: 웹서버의 종류 / 별로 좋지 않은 형태 버전에 대한 취약점이 있을 수 있기 때문에 공격을 할 여지를준다.

Last-Modified: Tue, 23 Jul 2019 02:31:52 GM
: 컨텐츠가 마지막으로 변경한 시간 / 일시적으로 디스크에 저장한다 (웹 캐시) 다음번 요청을 할 때 변경되지 않는 데이터를 요청을해서 응답을 할 때 컨텐츠 사이즈가 클 때 또 응답을 받게 되면 부화가 생긴다. body 부분이 응답하지 않고 cache가 있다고 전송한다.
chrome 시크릿 모드 = 캐시 저장을 안한다.

ETag: "c-58e4ffecebc8e"

Accept-Ranges: bytes
: 컨텐츠 단위

Content-Length: 12
: 컨텐츠 길이

Content-Type: text/html; charset=UTF-8
: 컨텐츠 타입, (html이고 유니코드 형식이다)

php <? ?>
jsp .net <% %>
사이에 동적 컨텐츠가 들어간다. 
html사이에도 php가 들어갈 수 있다. 다른 형태의 포맷이 들어갈 수 있다.
php 모듈을 추가할 수 있다.

php 정적인 컨텐츠로 변환을 시켜서 클라이언트한테 전달한다.
그래서 텍스트 밖에 남지 않는다.
동적인 컨텐츠의 소스코드를 그대로 볼 수 없다. 그래서 클라이언트는 정적인 컨텐츠로만 볼 수 있다.

html form 태그
input type

	parameter
GET 	URL ?  
동적인 컨텐츠에 파라미터를 넘겨준다. (URL에 붙인다) / 단순 페이지 요청이나 중요하지 않는 페이지 요청을 GET 방식을 사용한다. 파라미터는 '?' 뒤에 붙인다. 쉽고 빠르지만 조작이 가능하다.
 
POST 	HTTP BODY
추가적인 정보 파라미터를 전달할 때 GET POST는 파라미터 값이 다르다.

실제 다이나믹 컨텐츠는 우리가 볼 수 없다. 모든 것들은 정적으로 만들어 놓을 수 없다.
요즘에는 아주 빠르게 광고, 뉴스가 자주 바뀌기 때문에 정적인 컨텐츠로 만들 수 없다.

dpkg -i = rpm
            ->->
client <-----|------------------> server
	    <-<-
	    zap

vnet0 = 가상컴퓨터 네트워크 카드
brctl show = 브릿지 보는 명령어

HTTP Method
GET
POST

Head/Put/Delete = 조사하고 알아볼것
method에 따라서 body가 있는지 없는지 (get은 body가 없을 수 있지만 post는 무조건 있어야한다)
파라미터 여부 문서를 정리하는게 필요하다.
응답 코드도 조사하고 알아볼것










