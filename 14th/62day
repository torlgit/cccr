ansible

IaC(Infrastruture as code)

자동화, 그 중에서 정점은 ansible 이런 도구를 IaC라고 한다.
인프라를 코드로 작성하고 선언한 코드대로 인프라를 구축해준다. (network, instance)
인프라를 제공할 수 있는 모든 형태를 코드로 표현한다. (시스템을 구성하고 vm 만들어주고, 웹 서버,  로드 밸런스 설치, 구성, db 구성) 등을 다 코드로 만들 수 있다.

장점
1. 대규모 작업을 실수 없이 할 수 있다.
2. 일관성 있는 환경을 제공할 수 있다.


누가 사용을 하든 일관성 있는 환경을 제공할 수 있는게 가장 큰 장점이다.

CM Tool :
configuration management : 시스템을 구성하고 관리한다라는 의미

DevOps :
devlopment operations, 하나의 프로젝트를 실행하게 되면 
개발, 개발 하기전엔 어디까지 개발할지에 대한 스펙을 만들고 개발을 한다. 개발자가 만든 코드가 제대로 작동하는지 확인하는 작업 QA를 한다.
배포, 실제 운영서버에 릴리즈 한다.

개발부터 시작을해서 운영을 하기까지의 프로세스 흐름, 절차등이 유연하게 잘 움직일 수 있도록 하는 문화
기술들을 이용해서 이러한 문화를 만들 수 있다. 무조건 devops를 한다고해서 한 팀, 한 부서, 한 사람이 할 필요는 없다.

개발
QA
릴리즈
작업의 반복이다.

개발자의 환경, QA환경 (테스트, 운영환경)은 다르다. 환경에 대한 일관성이 없다.
그나마 vm (하이퍼바이저)가 나온 이후로 같은 vm을 사용해서 어느정도 일관성이 있었지만, 패키지 다운로드에 따라 일관성이 달라졌다.

서버에 안전성, 보안 때문에 패키지를 최소화 설치 되어있기 때문에 구현이 안될 수 있다,
개발자는 기능 구현을 위해 최신 버전을 사용한다던지.

ansible은 대규모 작업을 변화없이 일관성있는 환경을 제공해주는 프로그램이다.
이러한 도구를 오케스트레이션 도구라고 한다.

일반 라우터에 스위치 기능을 넣을 수 없다.
전통적인 네트워크 장비는 하드웨어가 있어야했다.
가상 네트워크 같은 경우는 하드웨어 없이 전용 장비 없이 소프트웨어로 네트워크를 정의할 수 있다.
sdn (so

요즘은 실제 장비도 code로 network를 올릴 수 있다.
ms, amazon 에도 software로 cisco 장비도 올릴 수 있다. (image를 가지고 라우터를 구현하는 형태)
소프트웨어 정의 네트워크

nfa 네트워크 기능 가상화, 네트워크 기능을 가상으로 해주는 것, 라우팅 기능, 스위칭 기능, 방화벽 기능, vpn, ips 등 네트워크 기술을 가상화한다. (openstack에서 구성된 형태)

실제 물리적인 장비도 software로 구현할 수 있다.
하이퍼바이저 = 시스템을 소프트웨어로 제공하는 것, 실제 하드웨어가 없어도

스토리지 sds, 소프트웨어로 정의된 스토리지 (swift, cinder)
옛날에는 스토리지 장비가 따로 있었다. 스토리지 전용 하드웨어를 가지고 있는 장비가 있었다.

SDDC : VMwere가 밀고 있음, 다 소프트웨어로 구성된 데이터센터
즉 모든 인프라가 x86 일반적인 장비만 있으면 스토리지, 네트워크 인프라를 소프트웨어로 구성할 수 있다.
모든게 소프트웨어로 구성할 수 있어서, code로 구현할 수 있다.

여러가지 소프트웨어가 있는데 왜 하필 ansible을 쓰냐?
1. 배우기 쉽다.
2. 설정 및 관리가 쉽다.

neturn에서 에이전트 (cloud) 통신을 해서 정보를 갖고온다.
server client model = 에이전트

ansible은 유일하게 전용 프로그램을 사용하지 않는다. 에이전트 리스
ssh를 통해서 접속을 한다.

cisco router도 유닉스 시스템이기 때문에 ssh가 된다.
ssh 접속만 되면 모든 형태의 인프라를 제어할 수 있다.

sudo apt install software-properties-perties-common
우분투에서 repository를 설치하기 위한 패키지

cd /etc/apt = etc/rum.repos.d
sudo apt-add-repository ppa:ansible/ansible (ppa : 추가하는 패키지)

우분투는 레포지토리를 추가해도 갱신이 되지 않는다. apt update 명령어 사용해서 갱신해야한다.
apt upgarde (패키지를 업데이트할때 사용되는 명령어)

sudo vi /etc/ansible/hosts -> 인벤토리 파일
ansible all --list-host -> 인벤토리에 있는 모든 매니지먼트를 의미한다. (모든 호스트의 목록)
ansible 192.168.122.10 --list-host --> 인벤토리에 대한 질의, 해당 되는 호스트에 대한 확인도 가능하다.

ansible 192.168.122.10 -m command -a "hostname" --ask-pass
-m은 모듈 -a는 아규먼트, 안되는 이유 : password가 없기 때문에... 패스워드가 필요하다. 인증이 제일 중요함

--ask-pass
접속하는 계정의 패스워드

-u root
접속하는 계정을 지정 (루트로 접속하면 안된다)

--ask-pass --become --ask-become-pass
ansible all -m command -a "hostname" --ask-pass
같은 패스워드를 사용하는 경우에 위와 같은 명령어 실행이 가능하다.

rc = return code

-m 모듈 -a 인자

free_form 필수.

코어 모듈 : ansible 개발팀이 만든 모듈

커뮤니티 모듈 : ansible을 개발하는 모임에서 만드는 모듈

서드파티 모듈 : ansible 개인, 회사이 만든걸 찾아서 쓸 수 있다. (직접 개발하면 서드파티 모듈)

COPY, fetch (관리 노드 -> 컨트롤러 노드 복사)
모듈마다 출력되는 결과는 나르다.

작업의 상태는 기본적으로 4가지가 있다.
success
changed
unrichubl
faild

퍼미션을 mode라고도함.
success, changed의 차이는 둘 다 성공적으로 실행됐는데, 변화가 있냐 없냐의 차이

Idempotance : 멱등(성), 몇 번을 실행하든 항상 같은 결과가 나온다.
ansible의 모든 모듈이 멱등(성)을 제공하지 않는다.
f(x)=f(f(x))

file의 state 설정
absent (삭제), directory, file, hard, link, touch (생성) | 변경이 불가능하다.

yum의 state
과거형이다. 현재형은 없음. 설치하세요가 아닌 설치가 되어있어야합니다. (현재형은 없다)
제거 되어 있어야 합니다. 라고 한다. 제거 하세요라는 상태가 아니다.

service moduel
모두 다 지원한다. 모든 형태의 유닉스 계열을 다룰 수 있다. (윈도우는 빼고)

기본적으로 apache 웹 서버를 올리고 간단한 컨텐츠 복사 하고 방화벽 열고.
ansible host1 -m copy -a "dest=/tmp/hello.txt content='hello'"
