1장 티밍
티밍, 온딩

어그리게이션

물리적인 2개의 네트워크를 묶어서 하나의 네트워크처럼 제공해준다. 티밍 이라고한다.

네트워크 세팅 할 때 사용했던 네트워크 매니저를 사용
커넥션을 만들 때 add 할 때 type을 이더넷을 했었는데, team이라는 타입을 주면된다.

2장 SELinux
SELinux
보안 항상 하는 리눅스 기능 미 국방부에서 만듬(리눅스 보안을 위해서) 제한이 되어서 원하는 형태로 만들지 못할 수 있음

3장 DNS
DNS 직접 구축을 하는 내용, 인터넷을 사용할 때 사용하는 주소 체계를 갖고 있어서 상담히 어렵다.

4장 DHCP
DHCP 간단하게 개념 얘기만.. 요즘 대부분 네트워크 장비 dhcp 기능을 가지고 있다.
옛날에는 장비에 dhcp가 구현이 안되서 소프트웨어로 했었는데, 요즘은 대부분 장비에 dhcp 기능이 있다.

5장 LDAP
ldap 디렉토리 엑세스 프로토콜	/	파일 시스템 디렉토리가 아니다.
결론적으로 계정, 그룹, 패스워드 다 파일로 저장되어있는데, 리소스들을 계층 형태로 저장하는 별도의 서버
디렉토리 서버라고 하고 디렉토리 액세스 프로토콜 이라고 한다.

우리는 로컬인증을 사용하는데, 개별 시스템을 로컬 시스템이라고 한다.
로컬에 있는 커널이 인증을 해준다.
ldap이 계정서버가 가지고 있고 네트워크를 통해서 인증을 해준다.

계정은 서버에만 만들어두고 ldap을 통해 보안을 통제한다. (계정서버)
ldap말고 커버로스라는, 케로베로스라는 프로토콜을 이용해서 원격인증에 사용한다.
더 유명한건 ms 액티브 디렉토리라는 제품 (ad) 
실제로 리눅스, 유닉스를 쓰더라도 액티브 디렉토리를 쓰는 경우도 많다.

6장 부터는 스토리지가 나온다.
ftp 서버는 사용을 하지 않기 때문에 간단하게 배울거다.
안쓰지만 개념은 알고 있어야한다.

7장 NFS
네트워크 파일 시스템이라고 하는,
파일 시스템은 디스크 기반의 파일 시스템만 했었는데, 
das nas san 네트워크 어텍치드 서비스 분산 기반의 파일시스템

nfs 같은 경우 리눅스에서 많이 쓰는 형태이다.

8장 SMB
분산 파일 시스템, 서버 메시지 블록이라고 한다.
윈도우에서 사용하는 공유폴더, 공유 프린트에서 사용하는 프로토콜이다.

삼바 (소프트웨어 이름) SMB는 ms
윈도우 공유폴더는 윈도우끼리만 스토리지를 제공할 수 있었는데, 리눅스 유닉스 시스템과 스토리지 제공이 가능하다.
실제로는 많이 쓰지 않지만, 기본적으로 알고 있어야한다.
요즘에 나온 윈도우는 NFS를 지원하기 시작했다.

9장 iscsi
스커지 커맨드, 인터넷 프로토콜 ip를 통해서 스커지 커맨드를 전송한다.
iscsi = san 스토리지 계열 네트워크, 기업에서 필수적으로 사용하는 스토리지
스토리지는 데이터를 저장하기 위한 목적이고, 기업에선 데이터가 가장 중요하다.

10장 아파치
요즘 대부분의 서비스는 웹서비스이다. 웹은 반드시 잘 알아야한다.
웹페이지를 개발하는 것을 제외하고는 다 알고 있어야한다.	/	클라우드 등을 이해하기위해서

아파치를 구현해서 웹 서비스를 어떻게 할 것인가? https 구성, 동적 컨텐츠 구성 등
작동방식 이해를 위해서 간단한 프로그래밍도 할 예정

11장 데이터베이스
웹에서 데이터를 저장할 때 데이터베이스를 사용한다.
기본적으로 저장을하고 관리를 하는게 데이터베이스 라는 테이블을 이용한다.
sql 커맨드, 언어		|	웹과 데이터 베이스 연동

웹 서비스, 데이터 베이스는 굉장히 중요하다.

네트워크 티밍
물리적인 인터페이스를 묶어서 하나의 네트워크로 만든다.
스피드의 총합 bandwidth이다.

유닉스 계열에서는 bonding	/	윈도우 계열에서는 teaming
채널들은 네트워크 계열 회사에서 부르는 방식

teaming - bonding
기본적인 개념은 같다.	/	티밍,본딩 구성이 가능하다. 

리눅스에서 본딩을 구성하는 경우는 kenel space 작동
리눅스 티밍은 RHEL7 버전부터 사용되었고, user space에서 작동

차이가 있기 때문에 리눅스에서는 2개로 나눴다.

메모리는 크게 2 가지 영역으로 나눠진다.
커널만 사용하는 영역 (커널스페이스), 사용자가 사용하는 영역으로 분리 되어있다.
서로 접근할 수 없도록 격리 되어있다. 
루트에 proc라는 디렉토리가 있는데, 디렉토리 안을 보면 메모리에 관한 정보, 수정된 디렉토리가 보이는데
그 디렉토리는 프로세스 id이다. 커널 영역과 사용자 영역 간의 정보를 주고 받을 수 있다.
proc 디렉토리의 목적..

본딩 자체를 구성을 하고, 동작을 시키는게 커널에서 작동하는것
티밍은 사용자 레벨에서 실행 시키는 형태이다.

이 둘의 차이는
티밍, 본딩을 하는 설정 정책들을 본딩은 커널 영역에서 작동을 하고 있기 때문에 변경하려면 재부팅을 해야한다.
커널이 실행 될 때 본딩이 작동하기 때문이다.

티밍 같은 경우는 사용자 영역에서 작동하기 때문에 시스템을 재부팅 하지 않아도 쉽게 변경이 가능하다.

성능의 문제도 있긴한데 티밍이 본딩보다 약간 좋은 수준이다. 거의 비등비등하다 (5% 내외정도, 체감은 안된다)
리눅스에서 본딩과 티밍은 다른 의미로 쓰인다.

/etc/os-release
리눅스의 정보를 보는 파일 위치

/etc/redhat-release
리눅스의 버전을 보는 파일 위치

watch [명령어] :
2초마다 실행 해준다.








cd /usr/share/doc/teamd-1.27/example_configs

teamd 패키지 버전,
example_configs 에제가 나온다. / dump 제이슨 형태의 샘플
설정하는 방법, 문서들이 존재한다.

파일을 직접 수정하는 경우 reload를 해줘야한다.	/	서비스를 reload 하는 개념과 같다.
하나의 네트워크 카드에 여러 개의 네트워크를 설정할 수 있다.	/	스위치의 vlan과 비슷하다.

ifconfig는 하나의 인터페이스에 여러 개의 ip가 설정을 해놓으면 반영을 못해준다.
그래서 ifconfig 최신 기술을 반영하지 못해서 사용하지 않는다.

클라우드 자체에서는 티밍을 쓰지 않는다.
클라우드 위에서 사용자 입장에서는 티밍 구성을 안한다.
서비스를 제공하는 제공자 입장에서 고가용성, 시스템이 죽더라도 대비할 수 있어야한다.
티밍, 본딩을 해준다.
모든 것들은 다 이중화 구성을 해준다.

티밍을 구성하기전에 통신을 했으면 arp 캐시가 있다.

arp -d (arp 캐시를 지운다)
watch ip -s link show team0
watch -n -d ip -s link show enp0s3

리눅스 보안 SELinux

DAC :
Discretionary access control (임의적인 접근제어 기법)
루트를 제외하고 각 개별 사용자가 자신의 파일들을 제어를 한다.
명령어가 chmod 이다. 가장 기본적인 접근제어 기법
문제점은 관리자가 모든 write 권한이 있다. 보안에서 가장 중요시 하는건 최소권한 / dac는 그게 안된다.
주체가 객체에 퍼미션을 준다.

Non-DAC (RBAC)
Role-Based Access Control (역할, 권한을 더 준다.) 가장 많이 쓰는 non-dac기법이다.
계졍을 관리하는 역할, 웹을 관리하는 역할 등 세부적으로 정해준다.
sudo를 이용해서 명령어에 제한을 걸 수 있다.	/	ldap은 역할기반 제어가 가능하다.

ad - 커버로스와 ldap을 구현했다.
active directory 이전에 novell directory 를 사용했었다.

MAC
Mandatory Acess Control 강제적 접근제어
주체(서브젝트)와 객체(오브젝트)가 있다.	/	vi를 이용한다면 vi가 주체 파일이 객체
주체에 등급 label이 있다.	/	퍼미션 별개로 label 통해 제어를 한다.
접근제어기법을 사용하는건 일부분, 미 국방부만 사용한다.	/	unix 솔라리스만 가능헀지만, 리눅스도 가능
주체가 객체에 접근 할 때 label 접근제어를 한다.

vender lock-in :
제품을 만드는 회사에 잠긴다.	/	특정회사에 종속된다. 회사가 의도를 가지고 다른 방향을 간다면 문제발생
멀티 클라우드, 필요한 기능들을 이것저것 다 쓴다. / 구글, 아마존, 피지컬을 쓴다.

시스템에 접근제어를 하는 방식 3가지
