인프라는 서비스를 제공하기 위한 vm(가상머신)
기본적으로 vm이 중심이다. vm 구성하기 위해서 기능들을 컴퍼런트가 제공하는지..

Nova : openstack의 compute 가상화를 지원하는 프로젝트 (kvm을 controller 해서 vm제공)
image 제공 kvm이 제공받은 이미지를 통해서 vm을 제공
neturon : switch, lv 환경 라우팅, 로드밸런스 floating ip, vm에 제공
cinder : 영구적인 스토리지를 제공, cinder를 사용하지 않고 vm을 만들면 root, swap, 디스크 kvm이 제공하는 block 장치 사용, kvm block 장치는 instance 라이프 사이클이 같다. / 인스턴스를 지우게 되면 사용하지 못하는데, cinder를 이용해 데이터 영구저장이 가능하다.
swift : 오브젝트 스토리지, 사용자들이 사용하는 스토리지, file을 올리는 용도로도 사용하지만, 오픈스택 내에서는 이미지를 저장하는 스토리지(glance의 스토리지, cinder의 백업 스토리지)등으로 사용
horizon : 유저, 사용자 인터페이스를 제공해주는 사용량, 이벤트, 알람 기능을 가지고 있다.
heat : 오케스트레이션 서비스, yaml이라는 file을 이용해서 리소스들 (security group, network, router, vol)코드로 정의 할 수 있고, code를 이용해서 만들 수 있다. // 자동화와 관련됨
오토스케일링 : vm의 스케일을 자동으로 한다.
keystone : 인증을 담당해준다.

httpd에 status를 보면 keystone이 보인다. (key stone admin, keystone main) 별도의 서비스로 존재하지 않고 아파치에 같이 작동한다. 예전 버전에는 keystone이 따로 있었다. (현재는 apache에 통합된 상태) = 웹 어플리케이션으로 만들어짐

keystone 을 존재하는, 관리하는 리소스 (project, domain, group, user, role)가 존재한다.
identification 식별, ausoraization 인증, 목적

Project
Domain
Group
User(group, domain, project에 속함)
Role 

Domain(구성하기 위해선 ldap이 필요)
 ->	project
      ->	group
	   ->		user (프로젝트에 속할 때 role이 부여 되어 있어야함)
서로에 속한다.

LDAP (디렉토리 엑세스 프로토콜), 트리형태로 오브젝트를 관리하게 되어있다. = LDAP DN, (cn|dn) sql 쿼리처럼 사용
최상위 트리에는 도메인 서버가 있다.
Multi Tenanay : 요즘에는 안씀 (일반적인 형태), 공동으로 사용한다. 가상화 개념 전에는 single tenanay였다.
공동으로 쓰고 있지만, 보안상, 논리적, 물리적으로 격리가 되어있어야지 안전하게 사용할 수 있다.

LDAP서버가 구성되어 있으면 회사별로 도메인을 분리 할 수 있다. (기본적으로 LDAP 서버가 없기에 도메인을 사용할 수 없다) // LDAP서버가 있다면 Domain에 따라 분리할 수 있다.

역할을 사용자 뿐 아니라 그룹에게도 부여할 수 있다.

openstack을 운영할 때, ssl 부여를 해야한다. / dashborad (ssh로 접근하는데, 도청 당할 수 있어서 ssl)
내부 통신도 보안 ssl을 부여해야한다.

openstack 프로젝트간의 통신도 ssl 적용 시켜야함, (인증서, 키가 있어야함) 프로젝트마다 각각 달라야한다.
각각 ssl 인증을 받기 위해서 프로젝트가 존재한다.? (인증을 하기 위한 용도)

모든 목록은 database가 갖고있다. (openstack list) // mariadb에 저장되어있다.
keystone backend - 저장소 개념, 두 가지 중에서 선택 할 수 있다. (storge도 backend라고함)
	-mysql/mariadb
	-ldap

ldap이 있다면, mariadb를 저장하지 않아도 된다. (ldap에 저장 가능), 큰 규모의 서비스를 할 때 세분화가 가능하다.
인증도 http로 이루어진다. identity api = ?

API v2(mysql, mariadb)
    v3(mysql, mariadb + ldap)

API (application programming interface) : 인터페이스, 프로그램을 하기위한 인터페이스 | 만들어둔 것에 필요한 내용을 더 추가해서 사용한다.
REST(representational state transfer)FUL AIP : http, 요청과 응답을 통해서 
SOAP

ss -tnlp | grep 5000 = ?

key stone의 가장 중요한 역할 = 인증
Token Based Authertication.

ssh, ftp 같은 서비스는 네트워크가 끊어지게 되면 인증도 풀린다. (인증을 유지하려면 tcp연결을 계속해야함)
http 프로토콜은 4계층에서 tcp를 쓰긴하지만, http 프로토콜은 ssh, ftp처럼 tcp를 사용하긴 하지만 응답 받으면 끊어버린다.

웹에서 인증 받는 방식 3가지 (비교) * 숙제 * / 기능상 어떻게 통신하는지, 유지하는지 기법의 차이
cookie : 일반적으로 가장 많이 사용하는 방식
session
token : openstack 에서 사용하는 방식

openstack tokken issue (expires 만료기간 등 정보가 있음) / 토큰만 가지고 인증 받을 수 있다.

토큰을 관리하는 방식
UUID : UUID = 32byte | 소규모에서는 상관없지만, 대규모에서 사용하는 경우 ID 부족 사태가 일어날 수 있다.
PKI/PKIZ : PKI, PKIZ 인증서를 사용하는 형태, 내부적으로 토큰을 발급을 하는형태 인증서가 생각보다 사이즈가 크다. = 사이즈가 크면 느리다. (토큰이 많은 경우, 느려진다) pki(zlib- zzip lib) 압축
Fernet : 암호화 키기반, 한번 인증 받게되면 인증하는 키를 3개 만든다. 이 3개의 토큰을 로테이션 시킨다. (최대 250byte가 넘지않음)

아래로 갈수록 최신. 토큰이 만료가 되어도 db에서 지워지면 안된다.
해당 토큰이 만료가 되어서 db에서 삭제가 되었으면, 똑같은 id로 새로운 id로 발급할 수 있고, 이전 사용자가 그 토큰으로 접근을 할 수 있게 된다. = 데이터베이스에 토큰이 쌓인다.

ssl 인증 방식을 사용할때
grep HORIZON_SSL answers.txt

db에 대한 접근 형태 (answer file에 지정한대로 구성이된다)
grep connection=mysql /etc/*/*.conf

cd /etc/keystone 에 모든 설정 방식이 있다.
id, password 혹은 ip가 잘못되어서 사용을 못하는 경우도 있다. (docs/openstack/keystone)

keystone 인증(sso)
catalog 
	-service
	-endpoint (REST API)
		-public (고객용, 실제 접속이 가능해야한다)
		-admin (내부)
		-internal (내부에서만 접속이 가능해야함)

openstack catalog list

endpoint를 보면 값이 다 같은데 실제로는 다 달라야한다. (packstack은 이렇게 밖에 구성이 안됨)
실제 서비스에서는 위와 같은 구성으로 하면 안된다.
망 분리, 관리용, 서비스용 따로 (inband, outband)

그러면 admin과 internal의 차이??
관리용은 internal을 사용
admin은 admin 사용자가 인증을 하기 위해 만들어놓은 admin이 사용하는 전용 네트워크이다.

internal이 관리면 admin은 ??
admin을 따로 구분할 수 없기 때문에 admin만 사용하는 네트워크를 만들었다.
현재는 다 구분이 가능하기 때문에 admin url은 사용하지 않는다. (오픈스택에서도 사후 버전에서는 없어질 수 있다)

인스턴스는 리전을 넘어갈 수 없다.
aws ebs 볼륨, 로드밸런스 (특정 리전에 만든다)
az (어베리어블 존) = openstack nova

제일 큰 단위는 리전이다.
물리적으로 떨어져 있는 데이터 센터를 만들 때 
리전은 고가용성, 지진, 해일, 자연재해를 대비해서 물리적으로 분리 시킨다.

compute가 많아지면 zone으로 나눌 수 있다.
멀티리전 경우에는 리전마다 API가 다를 수 있다.

openstack service list
openstack endpoint list
로 볼 수 있다.

pki 때문에 services, service project가 있었는데, 현재는 Fernet 방식을 사용하기 때문에 차후 버전에서 없어질 수 있다.

yum -y install jq


openstack 외부네트워크 핑
1. 방화벽 체크
2. security group
3. 둘 다 virio setting 인데, nat network를 2개 하면 어떨까?
4. 

토큰 인증 (https://docs.openstack.org/api-ref/identity/v3/index.html?expanded=password-authentication-with-unscoped-authorization-detail#password-authentication-with-unscoped-authorization)

curl -s -X POST http://192.168.122.10:35357/v3/auth/tokens -d \
'{
    "auth": {
        "identity": {
            "methods": [
                "password"
            ],
            "password": {
                "user": {
                    "name": "admin",
                    "domain": {
                        "name": "Default"
                    },
                    "password": "P@ssw0rd"
                }
            }
        }
    }
}'  -H "Content-type: application/json" -vv | jq .

curl -s -X GET http://192.168.122.10:35357/v3/users -H "X-Auth-Token:gAAAAABdWkZOQoGE-YrBqcOXTGr7KtMHz1DTNitOR7ilSBZwveZqj3XbfJLEgPP7R4Cs62OPY8rI3PsS-BpuM7vtarxx1PtO3vm895PV9L3jkLr8Pwh2MRmiIqb-8FQiPGBtYndPESKD_HTwxzp50njE0myKaNu_enRInoFgkdi0wsOVaP_QGHM" | jq .

계정 생성 =  openstack user create
curl -s -X POST http://192.168.122.10:35357/v3/users -H "Content-type: application/json" -H "X-Auth-Token:gAAAAABdWkZOQoGE-YrBqcOXTGr7KtMHz1DTNitOR7ilSBZwveZqj3XbfJLEgPP7R4Cs62OPY8rI3PsS-BpuM7vtarxx1PtO3vm895PV9L3jkLr8Pwh2MRmiIqb-8FQiPGBtYndPESKD_HTwxzp50njE0myKaNu_enRInoFgkdi0wsOVaP_QGHM" -d '{
    "user": {                                                    
        "default_project_id": "81191a269cc84f9c8a274e451c64272b",
        "domain_id": "default",
        "enabled": true,
        "name": "ppap-test",
        "password": "P@ssw0rd",
        "description": "Test for Rest API",
        "email": "ppap@example.com",
        "options": {
            "ignore_password_expiry": true
        }
    }
}' | jq .

[root@os-controller ~(keystone_admin)]# openstack server list --all-projects
+--------------------------------------+--------+---------+--------------------------------------------+-------------+----------+
| ID                                   | Name   | Status  | Networks                                   | Image       | Flavor   |
+--------------------------------------+--------+---------+--------------------------------------------+-------------+----------+
| f2aed9bd-bc40-4fb3-b022-93a0ae637c95 | dev-db | SHUTOFF | dev-network=172.25.10.103, 192.168.122.115 | centos-qcow | t1.small |
+--------------------------------------+--------+---------+--------------------------------------------+-------------+----------+
[root@os-controller ~(keystone_admin)]# 
[root@os-controller ~(keystone_admin)]# openstack server show dev-db
No server with a name or ID of 'dev-db' exists.
[root@os-controller ~(keystone_admin)]# openstack server show f2aed9bd-bc40-4fb3-b022-93a0ae637c95
+-------------------------------------+----------------------------------------------------------+
| Field                               | Value                                                    |
+-------------------------------------+----------------------------------------------------------+
| OS-DCF:diskConfig                   | AUTO                                                     |
| OS-EXT-AZ:availability_zone         | nova                                                     |
| OS-EXT-SRV-ATTR:host                | os-compute.cccr.local                                    |
| OS-EXT-SRV-ATTR:hypervisor_hostname | os-compute.cccr.local                                    |
| OS-EXT-SRV-ATTR:instance_name       | instance-0000001d                                        |
| OS-EXT-STS:power_state              | Shutdown                                                 |
| OS-EXT-STS:task_state               | None                                                     |
| OS-EXT-STS:vm_state                 | stopped                                                  |
| OS-SRV-USG:launched_at              | 2019-08-19T00:48:23.000000                               |
| OS-SRV-USG:terminated_at            | None                                                     |
| accessIPv4                          |                                                          |
| accessIPv6                          |                                                          |
| addresses                           | dev-network=172.25.10.103, 192.168.122.115               |
| config_drive                        |                                                          |
| created                             | 2019-08-19T00:48:13Z                                     |
| flavor                              | t1.small (fdc12ea1-6135-491f-a312-704829dc0447)          |
| hostId                              | 953f1c8df745a3b4f7530619a77d064c5660409b4e949f8ac45fa50b |
| id                                  | f2aed9bd-bc40-4fb3-b022-93a0ae637c95                     |
| image                               | centos-qcow (29355532-c583-4bb6-99f9-cd5ebf5a014f)       |
| key_name                            | dev-key                                                  |
| name                                | dev-db                                                   |
| project_id                          | 6c9609e604594646837facdbaf98d6c9                         |
| properties                          |                                                          |
| security_groups                     | name='dev-ping'                                          |
|                                     | name='dev-ssh'                                           |
|                                     | name='dev-db'                                            |
| status                              | SHUTOFF                                                  |
| updated                             | 2019-08-19T04:12:06Z                                     |
| user_id                             | 98e4a6fdb1eb42e7ac90bf5e9ce64d86                         |
| volumes_attached                    |                                                          |
+-------------------------------------+----------------------------------------------------------+

모든 리소스들은 이름이 같을 수 있다. ID는 다르기 때문에 ID로 써야 구별이 되서 나온다.

security group은 --all-projects 하지 않아도 나오게 된다. (권한의 스코프 범위라고 한다)

ls /etc/*/*policy.json
/etc/glance/policy.json    /etc/openstack-dashboard/cinder_policy.json
/etc/gnocchi/policy.json   /etc/openstack-dashboard/glance_policy.json
/etc/keystone/policy.json  /etc/openstack-dashboard/keystone_policy.json
/etc/neutron/policy.json   /etc/openstack-dashboard/neutron_policy.json
/etc/nova/policy.json      /etc/openstack-dashboard/nova_policy.json

rocky 버전은 Fernet 밖에 쓸 수 없다.
6개월 마다 새 버전이 나오고 새 버전이 보안 취약점이 나오면 막을 수 있는 방법이 없다.
디플로이먼트한 방식 사용
